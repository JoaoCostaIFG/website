# Docker Compose file for running paperless from the docker container registry.
# https://github.com/paperless-ngx/paperless-ngx/tree/dev
#
# SQLite is used as the database. The SQLite file is stored in the data volume.
#
# In addition to that, this Docker Compose file adds the following optional
# configurations:
#
# - Apache Tika and Gotenberg servers are started with paperless and paperless
#   is configured to use these services. These provide support for consuming
#   Office documents (Word, Excel, Power Point and their LibreOffice counter-
#   parts.
#
# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker compose pull'.
# - Run 'docker compose run --rm paperless createsuperuser' to create a user.
# - Run 'docker compose up -d'.

services:
  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    depends_on:
      - paperless-broker
      - gotenberg
      - tika
    ports:
      - "8080:8000"
    volumes:
      - paperless_data:/usr/src/paperless/data
      - paperless_media:/usr/src/paperless/media
      - /papeless/export:/usr/src/paperless/export
      - /paperless/consume:/usr/src/paperless/consume
    env_file: paperless.env
    environment:
      PAPERLESS_REDIS: redis://paperless-broker:6379
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
    restart: unless-stopped
  paperless-broker:
    image: docker.io/library/redis:7
    volumes:
      - redisdata:/data
    restart: unless-stopped
  gotenberg:
    image: docker.io/gotenberg/gotenberg:8.7
    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    restart: unless-stopped
  tika:
    image: docker.io/apache/tika:latest
    restart: unless-stopped

volumes:
  paperless_data:
  paperless_media:
  redisdata:
