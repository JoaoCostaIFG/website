server {
  listen 443 ssl http2 default_server;
  listen [::]:443 ssl http2 default_server;
  server_name localhost joaocosta.dev www.joaocosta.dev;
  error_log  /var/log/nginx/error.log error;

  root /usr/share/nginx/joaocosta.dev/main;
  index index.php;

  # ssl_certificate /etc/letsencrypt/live/joaocosta.dev/fullchain.pem;
  # ssl_certificate_key /etc/letsencrypt/live/joaocosta.dev/privkey.pem;
  ssl_certificate certs/server.pem;
  ssl_certificate_key certs/server_key.pem;

  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  add_header Onion-Location http://pkpi6zeaofckivldth3g2pdourtpyw6rp6b6j3jdusxonbhaisagt7yd.onion$request_uri;

  # secure stuff
  location ~ /(App/|database/|resources/|inc/|composer.*|vendor/) { return 404; }

  # adapted from: https://www.nginx.com/resources/wiki/start/topics/recipes/symfony/
  location / {
    try_files $uri /index.php$is_args$args;
  }

  location ~ ^/index\.php(/|$) { 
    fastcgi_pass unix:/run/php-fpm7/php-fpm.sock;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    include fastcgi.conf;
    include fastcgi_params;
    # When you are using symlinks to link the document root to the
    # current version of your application, you should pass the real
    # application path instead of the path to the symlink to PHP
    # FPM.
    # Otherwise, PHP's OPcache may not properly detect changes to
    # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
    # for more information).
    # Caveat: When PHP-FPM is hosted on a different machine from nginx
    #         $realpath_root may not resolve as you expect! In this case try using
    #         $document_root instead.
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT $realpath_root;
    # Prevents URIs that include the front controller. This will 404:
    # http://domain.tld/index.php/some-path
    # Remove the internal directive to allow URIs like this
    internal;
  }

  # return 404 for all other php files not matching the front controller
  # this prevents access to other php files you don't want to be accessible.
  location ~ \.php$ {
    # return 404;
    deny all;
  }
}

server {
  # redirect all http to https
  listen 80;
  listen [::]:80;

  server_name localhost joaocosta.dev www.joaocosta.dev;

  return 301 https://$host$request_uri;
}

server {
  # serve onion service
  listen unix:/var/run/tor-joaocosta-dev.sock;
  server_name pkpi6zeaofckivldth3g2pdourtpyw6rp6b6j3jdusxonbhaisagt7yd.onion;
  index index.html;
  root /usr/share/nginx/joaocosta.dev/main;
}
