name: site

services:
  caddy:
    image: ghcr.io/joaocostaifg/caddy:master
    container_name: caddy
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    environment:
      TZ: ${TZ}
    env_file: /usr/local/etc/caddy.env
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - /run/tailscale/tailscaled.sock:/run/tailscale/tailscaled.sock
    restart: unless-stopped
  # ---
  cloudflared:
    image: cloudflare/cloudflared
    env_file: /usr/local/etc/cloudflared.env
    command: tunnel run
    restart: unless-stopped
  # ---
  pocket-id:
    image: ghcr.io/pocket-id/pocket-id:v1
    expose:
      - "1411"
    volumes:
      - pocketid-data:/app/data
    environment:
      APP_URL: "https://id.joaocosta.dev"
      TRUST_PROXY: true
      PUID: 1000
      PGID: 1000
      # for IP geo location
      # MAXMIND_LICENSE_KEY:
    restart: unless-stopped
    healthcheck:
      test: "curl -f http://localhost:1411/healthz"
      interval: 1m30s
      timeout: 5s
      retries: 2
      start_period: 10s
  # ---
  website:
    image: ghcr.io/joaocostaifg/website:master
    container_name: website
    expose:
      - "3000"
    environment:
      TZ: ${TZ}
    restart: unless-stopped
  # ---
  vaultwarden:
    image: vaultwarden/server:1.34.3
    container_name: vaultwarden
    expose:
      - "80"
      - "3012"
    environment:
      TZ: ${TZ}
      WEBSOCKET_ENABLED: true
      EXPERIMENTAL_CLIENT_FEATURE_FLAGS: ssh-key-vault-item,ssh-agent
      DOMAIN: https://vaultwarden.tail1dfda.ts.net
    volumes:
      - site_bw_data:/data
    restart: unless-stopped
  # ---
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    expose:
      - "3000"
    environment:
      TZ: ${TZ}
      LOG_TARGETS: stdout
      HOMEPAGE_ALLOWED_HOSTS: tail.tail1dfda.ts.net
    volumes:
      - ./homepage:/app/config
    restart: unless-stopped
  # ---
  crafty:
    image: registry.gitlab.com/crafty-controller/crafty-4:latest
    container_name: crafty
    expose:
      - "8443:8443" # HTTPS
      - "8123:8123" # DYNMAP
    ports:
      - "19132:19132/udp" # BEDROCK
      - "25500-25600:25500-25600" # MC SERV PORT RANGE
    environment:
      TZ: ${TZ}
    volumes:
      - crafty-backups:/crafty/backups
      - crafty-servers:/crafty/servers
      - crafty-config:/crafty/app/config
      # It's ok/desirable for these to be lost on container restart
      #- ./crafty/logs:/crafty/logs
      #- ./crafty/import:/crafty/import
    restart: unless-stopped
  # ---
  pingvin-share:
    image: stonith404/pingvin-share:latest
    container_name: pingvin
    expose:
      - "3000"
    environment:
      TZ: ${TZ}
    volumes:
      - site_pingvin_data:/opt/app/backend/data
      - site_pingvin_imgs:/opt/app/frontend/public/img
    restart: unless-stopped
  # ---
  stirling-pdf:
    image: frooodle/s-pdf:latest
    container_name: pdf
    expose:
      - "8080"
    environment:
      TZ: ${TZ}
      DOCKER_ENABLE_SECURITY: false
    volumes:
      - site_pdf_trainingdata:/usr/share/tesseract-ocr/5/tessdata #Required for extra OCR languages
      - site_pdf_config:/configs
    restart: unless-stopped
  # ---
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    expose:
      - "8080"
    userns_mode: "host"
    environment:
      TZ: ${TZ}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: unless-stopped
  # ---
  joplin:
    image: joplin/server:latest
    container_name: joplin
    expose:
      - "22300"
    environment:
      TZ: ${TZ}
      APP_BASE_URL: https://joplin.tail1dfda.ts.net
      APP_PORT: 22300
      SQLITE_DATABASE: /data/db.sqlite
    volumes:
      - joplin_data:/data
    restart: unless-stopped
  # ---
  rss2email:
    image: ghcr.io/skx/rss2email:master
    container_name: rss2email
    working_dir: /app
    entrypoint: rss2email
    command: daemon -verbose rss@joaocosta.dev
    environment:
      TZ: ${TZ}
    env_file: /usr/local/etc/rss2email.env
    volumes:
      - rss2email-data:/app/.rss2email
    restart: unless-stopped
  # ---
  open-webui:
    image: ghcr.io/open-webui/open-webui:dev
    container_name: open-webui
    expose:
      - "8080"
    environment:
      TZ: ${TZ}
    env_file: /usr/local/etc/openwebui.env
    volumes:
      - open-webui_data:/app/backend/data
    restart: unless-stopped
  # ---
  database:
    image: ghcr.io/immich-app/postgres:16-vectorchord0.4.3-pgvectors0.2.1
    container_name: postgres
    environment:
      TZ: ${TZ}
      POSTGRES_INITDB_ARGS: "--data-checksums"
    env_file:
      - /usr/local/etc/postgres.env
    volumes:
      - immich-db:/var/lib/postgresql/data
    shm_size: 128mb
    restart: always
  # ---
  redis:
    image: docker.io/redis:8-alpine
    container_name: redis
    expose:
      - "6379"
    environment:
      TZ: ${TZ}
    volumes:
      - redisdata:/data
    healthcheck:
      test: redis-cli ping || exit 1
    restart: unless-stopped
  # ---
  traccar:
    image: traccar/traccar:latest
    container_name: traccar
    environment:
      TZ: ${TZ}
    volumes:
      - traccar_data:/opt/traccar/data
      - /usr/local/etc/traccar.xml:/opt/traccar/conf/traccar.xml:ro
    expose:
      - "8082"
    restart: unless-stopped
  # ---
  searxng:
    image: docker.io/searxng/searxng:latest
    container_name: searxng
    environment:
      TZ: ${TZ}
    volumes:
      - ./searxng:/etc/searxng:rw
    expose:
      - "8080"
    restart: unless-stopped

volumes:
  site_bw_data:
  site_pingvin_data:
  site_pingvin_imgs:
  site_pdf_trainingdata:
  site_pdf_config:
  pocketid-data:
  crafty-backups:
  crafty-servers:
  crafty-config:
  joplin_data:
  rss2email-data:
  open-webui_data:
  caddy_data:
  caddy_config:
  redisdata:
  immich-db:
  traccar_data:
